{"version":3,"sources":["axios.js","data/actions/state.js","history.js","components/Heart/Heart.js","components/Heart/index.js","data/actions/api.js","components/LikedWordList/LikedWordList.jsx","components/LikedWordList/index.js","components/WordCard/WordLinks.js","components/WordCard/WordCard.js","components/WordCard/index.js","components/WordList/WordList.js","components/WordList/index.js","components/Loading/Loading.jsx","components/Loading/LoadingWC.js","components/Loading/LoadingWL.js","components/Loading/LoadingLWL.js","components/Header/Search/Search.js","components/Header/Search/index.js","components/Header/Nav.js","components/Header/Header.js","components/Home.js","components/Intro.js","components/FourOhFour.js","components/Footer.js","components/Form.js","components/App/index.js","serviceWorker.js","data/initial.js","data/reducer.js","data/store.js","index.js"],"names":["axios","create","baseURL","headers","Accept","setWordCard","wordCard","type","resetLoading","stateKey","createHashHistory","Heart","props","handleClick","bind","this","id","liked","sendTheLike","className","onClick","style","fontSize","color","Component","connect","state","dispatch","isItLiked","patch","then","data","term","changeLike","LikedWordList","likedWordList","map","to","key","word","description","WordLinks","links","link","href","WordCard","definition","console","log","WordList","wordList","Loading","handleLoad","children","loaded","width","loadedWordCard","get","getWordCard","loadedWordList","loadedLikedWordList","Search","find","useState","value","setValue","onSubmit","e","preventDefault","onChange","currentTarget","placeholder","name","history","push","sendSearch","Nav","window","location","pathname","Header","withRouter","Home","data-text","Intro","FourOhFour","Footer","Form","email","password","handleName","handleEmail","handlePassword","handleFormSubmit","setState","for","App","Fragment","exact","path","render","match","LoadingWC","params","LoadingWL","LoadingLWL","Boolean","hostname","initial","setWReducer","setWLReducer","setLWLReducer","resetLoadingReducer","updateLikeReducer","updatedLWL","updatedWL","filter","likedWord","updatedWC","reducer","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.71271a27.chunk.js","sourcesContent":["import axios from \"axios\"; \r\n\r\nexport default axios.create({\r\n    baseURL: \"https://nerdwords.developme.space/api\",\r\n    headers: {\r\n        Accept:\"application/json\",\r\n        //Authorization:\"Bearer XXXXXXXX\"\r\n    },\r\n});","export const setWordCard = (wordCard) => {\r\n    return {\r\n        type:\"SET_WC\",\r\n        wordCard,\r\n    }\r\n}\r\n\r\nexport const setWordList = (wordList) => {\r\n    return {\r\n        type: \"SET_WL\",\r\n        wordList,\r\n    }\r\n};\r\n\r\nexport const setLikedWordList = (likedWordList) => {\r\n    return {\r\n        type: \"SET_LWL\",\r\n        likedWordList,\r\n    }\r\n};\r\n\r\nexport const resetLoading = (stateKey) => {\r\n    return {\r\n        type: \"UPDATE_LIKE\",\r\n        stateKey,\r\n    }\r\n};\r\n\r\nexport const updateLike = (term) => {\r\n    return {\r\n        type: \"UPDATE_LIKE\",\r\n        term,\r\n    }\r\n};\r\n","import { createHashHistory } from \"history\";\r\nexport default createHashHistory();\r\n","import React, { Component } from \"react\";\n//use like \nclass Heart extends Component{\n    constructor(props){\n        super(props);\n    \n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(){\n        let {id, liked, sendTheLike} = this.props;\n        sendTheLike(id, liked);\n    }\n\n\n    render() {\n        \n        return (\n            \n             <div className=\"card-container\">\n                <i className=\"fa fa-heart \"\n                onClick={this.handleClick}\n                style = {{ \n                    fontSize: 22, \n                    color: this.props.liked ? \"red\" : \"white\",\n                }}\n                ></i>\n             </div>\n         \n        )\n    }\n\n}\nexport default Heart;","// map dispatch to props get set like in there\r\nimport { connect } from \"react-redux\";\r\nimport {changeLike} from \"../../data/actions/api\"\r\nimport  Heart  from \"./Heart\"\r\n\r\nconst mapStateToProps = (state, { id, liked }) => {\r\n    return {\r\n    id,\r\n    liked,\r\n    };\r\n};\r\n    \r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n      sendTheLike: (id, liked) => {\r\n        dispatch(changeLike(id, liked));\r\n      }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps)(Heart);","import axios from \"../../axios\";\r\nimport { setWordList } from \"./state\";\r\nimport { setLikedWordList } from \"./state\";\r\nimport { setWordCard } from \"./state\";\r\nimport { updateLike } from \"./state\";\r\nimport { resetLoading } from \"./state\";\r\nimport history from \"../../history\";\r\n\r\n\r\n\r\n\r\n//gtting Data from the API\r\n\r\n\r\nexport const getWordCard = (id) => {\r\n\r\n    return (dispatch) => {\r\n        //dispatch(setWordCard(testWordCard()));// <--only for testing befor the API is deployed\r\n        axios.get(`/words/${id}`).then(({ data }) => {\r\n            dispatch(setWordCard(data.data));\r\n            resetLoading(\"wordCard\");\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const getWordList = () => {\r\n\r\n    return (dispatch) => {\r\n       // dispatch(setWordList(testWordList()));// <--only for testing befor the API is deployed\r\n        axios.get(\"/words\").then(({ data }) => {\r\n            dispatch(setWordList(data.data));\r\n            resetLoading(\"wordList\");\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const getLikedWordList = () => {\r\n   \r\n    return (dispatch) => {\r\n       // dispatch(setLikedWordList(testLikedWordList()));// <--only for testing befor the API is deployed\r\n        axios.get(\"/words/liked\").then(({ data }) => {\r\n            dispatch(setLikedWordList(data.data));\r\n            resetLoading(\"likedWordList\");\r\n        });\r\n    };\r\n};\r\n\r\n// sending DAta to the API\r\n\r\nexport const sendSearch = (value) => {\r\n    // console.log(\"ran actionCreator\");\r\n\r\n    return (dispatch) => {\r\n        axios.get(`/search?query=${value}`).then(({ data }) => {\r\n            if(data.data){\r\n                dispatch(setWordCard(data.data));\r\n                history.push(`/words/${data.data.id}`)\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const changeLike = (id, liked ) => {\r\n    const isItLiked = !liked;\r\n    return (dispatch) => {\r\n        axios.patch(`/words/${id}`,{ \"liked\": isItLiked }).then(({data}) => dispatch(updateLike(data.data)));\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// const testWordList = () => ([\r\n//     {\r\n//         \"id\":1,\r\n//         \"word\":\"TEST TEST TEST\",\r\n//         \"liked\":false\r\n//     },\r\n//     {\r\n//         \"id\":2,\r\n//         \"word\":\"Front end\",\r\n//         \"liked\":false\r\n//     },\r\n//     {\r\n//         \"id\":3,\r\n//         \"word\":\"Back end\",\r\n//         \"liked\":false\r\n//     }\r\n// ]);\r\n\r\n// const testLikedWordList = () => ( [\r\n//     {\r\n//         \"id\": 1,\r\n//         \"word\": \"Test\",\r\n//         \"definition\": \"lah lah\",\r\n//         \"liked\": true\r\n//     }\r\n// ]);\r\n\r\n// const testWordCard = () => ( {\r\n//     \"id\": 9,\r\n//     \"word\": \"aa\",\r\n//     \"definition\": \"ha ha\",\r\n//     \"liked\": false,\r\n//     \"links\": [\r\n//         {\r\n//             \"id\": 6,\r\n//             \"link\": \"www.funny.com\"\r\n//         },\r\n//         {\r\n//             \"id\": 12,\r\n//             \"link\": \"www.beans.com\"\r\n//         },\r\n//         {\r\n//             \"id\": 13,\r\n//             \"link\": \"www.beans.com\"\r\n//         }\r\n//     ]\r\n// });\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Heart from \"../Heart\";\r\n\r\n\r\n\r\nconst LikedWordList =( {likedWordList} ) => {\r\n\r\n// like WordList but with deffinitions with Heart beeing used\r\n  return(\r\n        <>\r\n\r\n        <h2 className=\"word-heading\">Liked Words</h2>\r\n\r\n        <ul className=\"list\">\r\n          { likedWordList.map( term => (\r\n              <div className=\"card list-items \" >\r\n                  <Link \r\n                  to={ `/words/${ term.id }` } \r\n                  key={ term.id } \r\n                  className=\"list-items-nav\"  \r\n                  >\r\n                      { term.word}\r\n                  </Link>\r\n      \r\n                  <p className='intro'>{ term.description }</p>\r\n      \r\n                  <Heart id={ term.id } liked={ term.liked} />\r\n              </div> \r\n          ))}\r\n        </ul>\r\n    \r\n        </>\r\n      )\r\n  }\r\n\r\n\r\nexport default LikedWordList;","import { connect } from \"react-redux\";\r\nimport LikedWordList from \"./LikedWordList\"\r\n\r\nconst mapStatetoProps = ({ likedWordList }) => ({likedWordList})\r\n\r\n\r\nexport default connect(mapStatetoProps)(LikedWordList);","import React  from 'react';\n\n\nconst WordLinks = ({ links =[] }) => (\n    \n    <span >\n        \n        {links.map(link => (\n            <>\n            <a \n            className=\"list-items-nav\"\n            key={ link.id } \n            href={ link.link }>{ link.link }</a>\n            </>\n        ))}\n    </span>\n);\n\n        \nexport default WordLinks;","import React from 'react';\n// import axios from'../axios';\nimport Heart from'../Heart';\nimport WordLinks from './WordLinks';\n\n\n\nconst WordCard = ({id, word, definition, liked, links}) =>  { \n    return(\n        <>\n        <div className='container'>\n        <div className='word-card'>\n        <h2 className='word-heading'>{ word }</h2>\n        \n        \n            <p className= \"word-define\"> {definition} </p>\n\n            <WordLinks links={links} />\n\n            <Heart id={ id } liked={ liked } />\n            \n        </div>\n        </div>\n        </>\n    )\n}\n\nexport default WordCard;\n","import { connect } from \"react-redux\";\r\nimport WordCard from \"./WordCard\"\r\n\r\nconst mapStatetoProps = ({ wordCard }) => {\r\n    const { id, word, definition, liked, links } = wordCard;\r\n    console.log(word);\r\n    return( {id, word, definition, liked, links})\r\n};\r\n\r\n\r\nexport default connect(mapStatetoProps)(WordCard);\r\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Heart from \"../Heart\";\n\n\n  \n\nconst WordList = ({ wordList }) => {\n    return(\n        <ul className=\"list\">\n            { wordList.map( term => (\n                \n                <div className=\"card list-items \" key={ term.id }  >\n                    <Link \n                    to={ `/words/${ term.id }` } className=\"list-items-nav\">\n                        { term.word}\n                    </Link>\n                    <Heart id={ term.id } liked={ term.liked } />\n                </div>\n            ))};   \n            \n        </ul> \n    )\n\n}\n  \n\n\nexport default WordList;\n\n","import { connect } from \"react-redux\";\r\nimport WordList from \"./WordList\"\r\n\r\nconst mapStatetoProps = ({ wordList }) => ({wordList})\r\n\r\n\r\nexport default connect(mapStatetoProps)(WordList)","import React, { Component } from \"react\";\r\n\r\nclass Loading extends Component {\r\n\r\n    componentDidMount() {\r\n        const { handleLoad, id }= this.props;\r\n\r\n            handleLoad( id );\r\n\r\n    }\r\n    render() {\r\n        const { children, loaded } = this.props;\r\n\r\n        return loaded ? children : (\r\n            <div className=\"progress\">\r\n                <div\r\n                    className=\"progress-bar progress-bar-striped active\"\r\n                    style={{ width: \"100%\" }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Loading;","import { connect } from \"react-redux\";\r\nimport Loading from \"./Loading\";\r\n\r\nimport { getWordCard } from \"../../data/actions/api\";\r\n\r\n\r\n\r\nconst mapStateToProps = ({ loadedWordCard },{ id }) => ({\r\n    loaded : loadedWordCard,\r\n    id,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleLoad: (id) => dispatch(getWordCard(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Loading);","import { connect } from \"react-redux\";\r\nimport Loading from \"./Loading\";\r\n\r\nimport { getWordList } from \"../../data/actions/api\";\r\n\r\n\r\n\r\nconst mapStateToProps = ({ loadedWordList }) => ({\r\n    loaded : loadedWordList,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleLoad: () => dispatch(getWordList()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Loading);","import { connect } from \"react-redux\";\r\nimport Loading from \"./Loading\";\r\n\r\nimport { getLikedWordList } from \"../../data/actions/api\";\r\n\r\n\r\n\r\nconst mapStateToProps = ({ loadedLikedWordList }) => ({\r\n    loaded : loadedLikedWordList,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleLoad: () => dispatch(getLikedWordList()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Loading);","import React,  { useState } from 'react';\n\n\nconst Search = ({ find}) => {\n\n  const [value, setValue ] = useState( \"\" );\n  \n  const handleChange = (e) => ( setValue(e.currentTarget.value));\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    find(value);\n  };\n\n\n  \n   \n    \n    return(\n    <form className=\"search\" onSubmit={handleSubmit} >\n      <input onChange={handleChange} className=\"form-input\" type=\"text\" placeholder=\"Search..\" name=\"search\"/>\n      <button className=\"form-button\" type=\"submit\"><i className=\"fa fa-search\"></i></button>\n    </form>\n\n    );\n   \n\n\n\n}\n\n\n\nexport default Search","import { connect } from \"react-redux\";\r\nimport {sendSearch} from \"../../../data/actions/api\"\r\nimport  Search  from \"./Search\"\r\n\r\nconst mapStateToProps = ({value}) => ({value});\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n      find: (value) => {\r\n        dispatch(sendSearch(value));\r\n      }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","import React, { Component} from 'react';\nimport Search from \"./Search\";\nimport {Link} from 'react-router-dom';\n\nclass Nav extends Component{\n\n    render(){\n        if (window.location.pathname === '/') return null;\n    return(\n    <>\n    <div className =\"nav-bar\">\n        <Link className='nav-link' to='/words'>Home</Link>\n        <Link className='nav-link' to='/liked'>Liked</Link>\n        <Link className='nav-link' to='/form'>Log In</Link>\n        <Search /> \n    </div>\n    </>\n   \n    );\n    };\n\n} \n\nexport default Nav;\n","import React, { Component } from 'react';\nimport Nav from \"./Nav\";\nimport { withRouter } from 'react-router-dom';\n\nclass Header extends Component {\n\n  render() {\n    const { children } = this.props;\n    \n    return (\n\n      <>\n        {/* <div className=\"container\"> */}\n          <header className=\"header glitch\">\n\n            {/* <h1 className=\"header-title\" data-text={children}>{children}</h1> */}\n            <div className=\"header-title \" >\n              {children}</div>\n\n            <Nav />\n\n          </header>\n        {/* </div> */}\n      </>\n    );\n  };\n\n\n\n}\n\n\nexport default withRouter(Header)","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n\n\nclass Home extends Component {\n    render() {\n        const { children } =this.props;\n        \n\n        return (\n        <>\n        <div className=\"body\">\n            <Link to=\"/words\">\n            <div className=\"glitch \" data-text=\"NERD WORDS\"></div></Link>\n            <div className=\"glow\">{children}</div>\n                <p className=\"subtitle\">Click to enter</p>\n        \n    \n        </div>   \n        </>\n\n            \n            \n\n        );\n\n\n\n    }\n\n    \n\n}\n\nexport default Home","import React from 'react';\n\n\nconst Intro = () => (\n    \n    <>\n        <p className=\"intro \">Search for a word and click for the description. Click the heart to favourite and create your own list!</p>\n    </>\n\n\n\n)\n\n\n\nexport default Intro","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\n\nconst FourOhFour = () => (<div className=\"four glitch\">404: Page Not Found. Head  <Link to=\"/words\"> here</Link></div>);\n\n\nexport default FourOhFour","import React from 'react';\n\n\nconst Footer = () => (\n    \n    <footer>\n        <p>&copy; ARO 2020</p>\n    </footer>\n\n\n\n)\n\n\n\nexport default Footer","import React, { Component } from \"react\";\n\nclass Form extends Component{\n    constructor(props){\n       super(props);\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\"\n        };\n    \n\n        this.handleName = this.handleName.bind(this);\n        this.handleEmail = this.handleEmail.bind(this);\n        this.handlePassword = this.handlePassword.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    }\n\n    handleName(e) {\n        this.setState({ name: e.currentTarget.value, });\n    };\n\n    handleEmail(e) {\n        this.setState({ email: e.currentTarget.value, });\n    };\n\n    handlePassword(e) {\n        this.setState({ password: e.currentTarget.value, });\n    };\n\n    handleFormSubmit(e) {\n        \n        e.preventDefault();\n\n    };\n\n\n\n    render() {\n        let {name, email, password }  = this.state;\n\n        return (\n            <>\n            <h2 className=\"word-heading\">Sign up</h2>\n            <form onSubmit={ this.handleFormSubmit } className=\"form\">\n                {/* <div className=\"form-elements\"> */}\n                    <label for='name'>Name</label>\n                    <input type=\"text\" id=\"name\"  onChange={ this.handleName } value={ name } />\n                \n                    <label for=\"email\">E-mail</label>\n                    <input type=\"email\" id=\"email\" onChange={ this.handleEmail } value={ email } />\n                \n                    <label for=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\"  onChange={ this.handlePassword } value={ password } />\n                \n\n                <button type=\"submit\">Submit</button>\n            </form>\n            </>\n        );\n    }\n}\n\nexport default Form;","import React from \"react\"; \r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n\r\nimport LikedWordList from \"../LikedWordList\";\r\n// import SearchBar from \"../SearchBar\";\r\nimport WordCard from \"../WordCard\";\r\nimport WordList from \"../WordList\";\r\nimport LoadingWC from \"../Loading/LoadingWC\";\r\nimport LoadingWL from \"../Loading/LoadingWL\";\r\nimport LoadingLWL from \"../Loading/LoadingLWL\";\r\n\r\nimport history from \"../../history\";\r\n\r\n\r\nimport Header from \"../../components/Header/Header\";\r\nimport Home from \"../../components/Home\";\r\n\r\nimport Intro from \"../../components/Intro\";\r\nimport FourOhFour from \"../../components/FourOhFour\";\r\nimport Footer from \"../../components/Footer\";\r\n\r\nimport Form from \"../../components/Form\";\r\n\r\nimport '../../App.css';\r\n\r\n\r\nconst App = (props) => (\r\n    <React.Fragment>\r\n      <Router  history={ history }>\r\n      {/* <Header > NERD WORDS </Header> */}\r\n        {/* <Navbar /> */}\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n             <Home />\r\n            </Route>\r\n\r\n            <Route exact path=\"/form\">\r\n              <Header> NERD WORDS </Header>\r\n             <Form />\r\n            </Route>\r\n\r\n            <Route exact path=\"/words/:id\"\r\n              render={ ( { match }) => (\r\n                <LoadingWC \r\n                  id = { match.params.id }>\r\n                    <Header > NERD WORDS </Header>\r\n                  <WordCard />\r\n                  <Footer />\r\n                </LoadingWC>\r\n              )}> \r\n            </Route>\r\n\r\n\r\n            <Route exact path=\"/words\">\r\n              <LoadingWL >\r\n              <Header > NERD WORDS </Header>\r\n                <Intro />\r\n                <WordList />\r\n                <Footer />\r\n              </LoadingWL>\r\n            </Route>\r\n            \r\n\r\n\r\n            <Route path=\"/liked\">\r\n              <LoadingLWL >\r\n              <Header > NERD WORDS </Header>\r\n                <LikedWordList />\r\n                <Footer />\r\n              </LoadingLWL>\r\n            </Route>\r\n\r\n            <FourOhFour />\r\n          </Switch>\r\n          {/* <Footer /> */}\r\n      </Router>\r\n    </React.Fragment>\r\n);\r\n\r\nexport default App;\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initial = { \r\n  wordList : [\r\n    {\r\n        \"id\":\"1\",\r\n        \"word\":\"API\",\r\n        \"liked\":false\r\n    },\r\n    {\r\n        \"id\":\"2\",\r\n        \"word\":\"Front end\",\r\n        \"liked\":false\r\n    },\r\n    {\r\n        \"id\":\"3\",\r\n        \"word\":\"Back end\",\r\n        \"liked\":false\r\n    }\r\n],\r\n  likedWordList: [\r\n    {\r\n      \"id\": \"1\",\r\n      \"word\": \"lah\",\r\n      \"definition\": \"lah lah\",\r\n      \"liked\": true\r\n    },\r\n    {\r\n        \"id\": \"2\",\r\n        \"word\": \"rah\",\r\n        \"definition\": \"rah rah\",\r\n        \"liked\": false\r\n    }\r\n  ],\r\n  wordCard :{\r\n    \"id\": 9,\r\n    \"word\": \"Api\",\r\n    \"definition\": \"ha ha\",\r\n    \"liked\": false,\r\n    \"links\": [\r\n      {\r\n          \"id\": 6,\r\n          \"link\": \"www.funny.com\"\r\n      },\r\n      {\r\n          \"id\": 12,\r\n          \"link\": \"www.beans.com\"\r\n      },\r\n      {\r\n          \"id\": 13,\r\n          \"link\": \"www.beans.com\"\r\n      }\r\n    ]\r\n  },\r\n  loadedWordCard: false,\r\n  loadedWordList: false,\r\n  loadedLikedWordList: false,\r\n};\r\n\r\nexport default initial;","const reducer = (state, action) => { \r\n  switch(action.type){\r\n    case \"SET_WC\" : return setWReducer(state, action)\r\n    case \"SET_WL\" : return setWLReducer(state, action)\r\n    case \"SET_LWL\" : return setLWLReducer(state,action)\r\n    case \"RESET_LOADING\" : return resetLoadingReducer(state, action)\r\n    case \"UPDATE_LIKE\" : return updateLikeReducer(state, action);\r\n    default: return state;\r\n  }\r\n}\r\n\r\n//reducer business logic\r\n\r\nconst setWReducer = (state,{ wordCard }) => {\r\n\r\n  return ({\r\n    ...state,\r\n    wordCard,\r\n    loadedWordCard : true,\r\n\r\n  })\r\n}\r\n\r\nconst setWLReducer = (state, {wordList}) => ({\r\n  ...state,\r\n  wordList,\r\n  loadedWordList: true,\r\n});\r\n\r\nconst setLWLReducer = (state, {likedWordList}) => ({\r\n  ...state,\r\n  likedWordList,\r\n  loadedLikedWordList: true,\r\n});\r\n\r\nconst resetLoadingReducer = (state, {stateKey}) => {\r\n  const {loadedWordCard, loadedWordList, loadedLikedWordList} = state;\r\n    return({\r\n    ...state,\r\n    loadedWordCard : stateKey === \"wordCard\" ? false : loadedWordCard,\r\n    loadedWordList : stateKey === \"wordList\" ? false : loadedWordList,\r\n    loadedLikedWordList : stateKey === \"likedWordList\" ? false : loadedLikedWordList,\r\n  });\r\n}\r\n\r\nconst updateLikeReducer =(state, { term }) => {\r\n  const { id , liked} = term;\r\n  const {wordCard, wordList, likedWordList} = state;\r\n\r\n  console.log(term );\r\n\r\n  const updatedWL =  wordList.map((term)=>((term.id === id) ? {...term, liked, } : term));\r\n\r\n  let updatedLWL;\r\n  if(!liked){\r\n    updatedLWL = likedWordList.filter((likedWord) => likedWord.id !== term.id )\r\n  }else{updatedLWL = [...likedWordList,term]}\r\n  \r\n\r\n  const updatedWC = (wordCard.id === id) ? {...wordCard, liked,} : wordCard;\r\n  \r\n  console.log(id, wordList.liked,liked);\r\n\r\n  return({\r\n    ...state,\r\n    wordList : updatedWL,\r\n    likedWordList : updatedLWL,\r\n    wordCard : updatedWC,\r\n  })\r\n}\r\nexport default reducer ;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport initial from \"./initial\";\r\nimport reducer from \"./reducer\";\r\n\r\n\r\nconst composeEnhancers =\r\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\nreducer,\r\ninitial,\r\ncomposeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './data/store';\nimport { Provider } from \"react-redux\"; \n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store= {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}